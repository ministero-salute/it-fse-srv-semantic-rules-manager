<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!-- <property name="LOGS" value="${APP_LOGGING_ROOT:-application-log}/logs" 
		/> <property name="FILE_NAME" value="springboot-liberty-project" /> -->
	<property resource="application.properties" />

	<springProperty scope="context" name="springAppName" source="spring.application.name" />

	<!-- You can override this to have a custom pattern -->
	<property name="CONSOLE_LOG_PATTERN"
		value=" %d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${springAppName},trace: %X{X-B3-TraceId:-} span: %X{X-B3-SpanId:-}, parent: %X{X-B3-ParentSpanId:-} exportable: %X{X-Span-Export:-},] %m%n%throwable" />

	<appender name="console"
		class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				${CONSOLE_LOG_PATTERN}
			</Pattern>
		</layout>
	</appender>

	<!-- <appender name="RollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
		<file>${LOGS}/${FILE_NAME}.log</file> <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
		<Pattern>${CONSOLE_LOG_PATTERN}</Pattern> </encoder> <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
		rollover daily and when the file reaches 10 MegaBytes <fileNamePattern>${LOGS}/archived/${FILE_NAME}-%d{yyyy-MM-dd}.%i.log 
		</fileNamePattern> <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
		<maxFileSize>10MB</maxFileSize> </timeBasedFileNamingAndTriggeringPolicy> 
		</rollingPolicy> </appender> -->

	<appender name="json"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder
			class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
				<jsonFormatter
					class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
					<!-- prettyPrint is probably ok in dev, but usually not ideal in production: -->
					<prettyPrint>false</prettyPrint>
				</jsonFormatter>
				<!-- <context>api</context> -->
				<timestampFormat>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</timestampFormat>
				<timestampFormatTimezoneId>UTC</timestampFormatTimezoneId>
				<appendLineSeparator>true</appendLineSeparator>
			</layout>
		</encoder>
	</appender>


	<!-- Elastic Logstash Encoder -->
	<if condition='property("log.elastic-search.enable").equals("true")'>
		<then>
			<logger name="elastic-logger" level="${log.elastic.level}"
				additivity="false">
				<appender name="elastic"
					class="net.logstash.logback.appender.LogstashTcpSocketAppender">
					<destination>${log.logstash.url}</destination>
					<encoder
						class="net.logstash.logback.encoder.LogstashEncoder">
						<provider
							class="net.logstash.logback.composite.loggingevent.ArgumentsJsonProvider" />
					</encoder>
				</appender>
			</logger>
		</then>
	</if>

	<!-- LOG everything at INFO level -->
	<root level="${APP_LOGGING_ROOT_LEVEL:-INFO}">
		<!--<appender-ref ref="RollingFile" /> -->
		<appender-ref ref="${log.output.format}" />
	</root>

	<!-- LOG "it.ibm*" package <logger name="it.ibm" level="${APP_LOGGING_LEVEL:-INFO}" 
		additivity="false"> -->
	<!-- to enabled rolling file appender uncomment next line -->
	<!-- <appender-ref ref="RollingFile" /> -->
	<!-- <appender-ref ref="json" /> </logger> -->

</configuration> 
